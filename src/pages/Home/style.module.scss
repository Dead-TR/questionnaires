.root {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  grid-gap: 15px;
  gap: 15px;
  padding: 20px 10px;
}

.link {
  text-decoration: none;
  transition: transform 0.2s;
  position: relative;

  &:hover {
    transform: scale(1.05);
    z-index: 10;

    & .adminButton {
      transform: scale(1);
      opacity: 1;
    }
  }

  .adminButton {
    transform: scale(0);
    opacity: 0;
    transition: transform 0.2s, opacity 0.2s;

    color: white;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    min-width: 40px;
    min-height: 40px;
    padding: 0px;
  }
}

$animationTime: 150;

@keyframes rotateAvatar {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(90deg);
  }
}

@keyframes noRotateAvatar {
  0% {
    transform: rotateY(90deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

.avatar {
  height: 260px;
  width: 100%;

  object-fit: cover;
  border-radius: 3px;

  margin: 0 auto;
  display: block;

  background: rgb(98, 152, 163);
  animation: noRotateAvatar #{$animationTime * 2}ms linear forwards;
}

.avatarBox {
  position: relative;
  width: 100%;
}

@keyframes rotateContent {
  0% {
    transform: rotateY(90deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

@keyframes noRotateContent {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(90deg);
  }
}

.content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 3px;

  background: white;
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);
  animation: noRotateContent #{$animationTime * 2}ms linear forwards;
  padding: 10px;

  .data {
    overflow: hidden;
    height: 100%;
    width: 100%;

    & > div {
      text-transform: capitalize;
      font-weight: 500;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;

      & > span {
        font-weight: 400;
      }
    }
  }
}

.avatarRotate {
  animation: rotateAvatar #{$animationTime * 2}ms linear forwards;
}

.contentRotate {
  animation: rotateContent #{$animationTime * 2}ms linear forwards;
}

:export {
  #{"animationTime"}: $animationTime;
}
