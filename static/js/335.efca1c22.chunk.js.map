{"version":3,"file":"static/js/335.efca1c22.chunk.js","mappings":"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","sources":["components/DeleteProfileConfirm/index.tsx","webpack://date/./src/components/FallBack/style.module.scss?665c","components/FallBack/index.tsx","webpack://date/./src/pages/Home/style.module.scss?08fe","pages/Home/Card/index.tsx","pages/Home/index.tsx","utils/getAge.ts"],"sourcesContent":["import { Box, Button, Container, Modal, Typography } from \"@mui/material\";\nimport { useProfiles } from \"containers\";\nimport React, { FC } from \"react\";\n\ninterface Props {\n  profileId: string | number | null;\n  setProfileId: (v: string | number | null) => void;\n}\n\nexport const DeleteProfileConfirm: FC<Props> = ({\n  profileId,\n  setProfileId,\n}) => {\n  const { removeProfile } = useProfiles();\n\n  return (\n    <Modal\n      open={!!profileId}\n      onClose={() => setProfileId(null)}\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}>\n      <Container\n        sx={{\n          background: \"white\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"fit-content\",\n          p: 2,\n          borderRadius: 2,\n        }}>\n        <Typography\n          sx={{\n            mb: 4,\n          }}>\n          Are you sure you want to delete the profile?\n        </Typography>\n        <Box sx={{ mx: \"auto\" }}>\n          <Button\n            onClick={() => {\n              removeProfile(\"\" + profileId);\n              setProfileId(null);\n            }}>\n            Yes\n          </Button>\n          <Button onClick={() => setProfileId(null)}>No</Button>\n        </Box>\n      </Container>\n    </Modal>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"fallBack\":\"style_fallBack__Ev18F\"};","import React, { FC } from \"react\";\nimport { Loader } from \"components/Loader\";\nimport css from \"./style.module.scss\";\n\ninterface Props {\n  show: boolean;\n}\n\nexport const FallBack: FC<Props> = ({ show }) => {\n  if (!show) return null;\n\n  return (\n    <div className={css.fallBack}>\n      <Loader size={250} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"animationTime\":\"150\",\"root\":\"style_root__-UKFR\",\"link\":\"style_link__+FVq7\",\"adminButton\":\"style_adminButton__CE7Sz\",\"avatar\":\"style_avatar__AYBUN\",\"noRotateAvatar\":\"style_noRotateAvatar__K0YgG\",\"avatarBox\":\"style_avatarBox__p4spt\",\"content\":\"style_content__H7zIE\",\"noRotateContent\":\"style_noRotateContent__+16Lm\",\"data\":\"style_data__+NoeF\",\"avatarRotate\":\"style_avatarRotate__AjPbE\",\"rotateAvatar\":\"style_rotateAvatar__UMFqk\",\"contentRotate\":\"style_contentRotate__PBxlZ\",\"rotateContent\":\"style_rotateContent__+CbMK\"};","import React, { FC, useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\n\nimport { Box, Button, Card, Typography } from \"@mui/material\";\n\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\n\nimport { createTimeouts } from \"utils\";\nimport { useAuth } from \"containers\";\nimport { usePath } from \"hooks\";\n\nimport { getAge } from \"utils/getAge\";\nimport { FrontProfile } from \"pages/CreateProfile/type\";\n\nimport css from \"./../style.module.scss\";\n\ninterface Props extends FrontProfile {\n  id: string;\n  isFavorite: boolean;\n  setFavorite: (id: string) => void;\n  handleRemove: (id: string | number) => void;\n}\n\nexport const ProfileCard: FC<Props> = ({\n  birthday,\n  children,\n  city,\n  country,\n  etc,\n  height,\n  job,\n  marital,\n  name,\n  photos,\n  weight,\n  id,\n  isFavorite,\n  setFavorite,\n  handleRemove,\n}) => {\n  const { user } = useAuth();\n  const { page: nav } = usePath();\n\n  const [isHover, setIsHover] = useState(false);\n\n  const age = useMemo(() => getAge(birthday), [birthday]);\n  const avatar = useMemo(() => photos[0], [photos[0].name]);\n  const { clearTimeouts, pushTimeout } = useMemo(() => createTimeouts(), []);\n\n  useEffect(() => {\n    return () => clearTimeouts();\n  }, [isHover]);\n\n  const handleRotate = () => {\n    clearTimeouts();\n    setIsHover(true);\n  };\n\n  return (\n    <Link\n      to={{\n        pathname: `/profile/${id}`,\n      }}\n      onPointerOver={handleRotate}\n      onPointerLeave={() =>\n        pushTimeout(() => setIsHover(false), +css.animationTime * 2)\n      }\n      onContextMenu={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleRotate();\n      }}\n      className={css.link}>\n      {user && (\n        <>\n          <Box\n            sx={{\n              position: \"absolute\",\n              left: -8,\n              top: -8,\n              zIndex: 2,\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 0.5,\n            }}>\n            <Button\n              className={css.adminButton}\n              color=\"error\"\n              variant=\"contained\"\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                handleRemove(id);\n              }}>\n              <CloseIcon />\n            </Button>\n\n            <Button\n              className={css.adminButton}\n              color=\"info\"\n              variant=\"contained\"\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                nav.navigate(`edit/${id}`);\n              }}>\n              <EditIcon />\n            </Button>\n          </Box>\n        </>\n      )}\n\n      <Box\n        sx={{\n          position: \"absolute\",\n          right: 0,\n          top: 0,\n          zIndex: 2,\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 0.5,\n        }}>\n        <Button\n          onClick={(e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            setFavorite(id);\n          }}\n          className={css.adminButton}\n          sx={{\n            color: \"red\",\n            transform: \"scale(1) !important\",\n            opacity: 1 + \"!important\",\n          }}>\n          {isFavorite ? (\n            <FavoriteIcon color=\"error\" />\n          ) : (\n            <FavoriteBorderIcon color=\"error\" />\n          )}\n        </Button>\n      </Box>\n\n      <Card\n        variant=\"elevation\"\n        sx={{\n          height: \"100%\",\n          p: 2,\n          display: \"flex\",\n          flexDirection: \"column\",\n          position: \"relative\",\n        }}>\n        <Typography\n          sx={{\n            fontSize: 24,\n            textAlign: \"center\",\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            textTransform: \"capitalize\",\n            lineHeight: 1.5,\n            whiteSpace: \"nowrap\",\n          }}>\n          {name}\n        </Typography>\n\n        <Typography sx={{ my: 0.5, lineHeight: 1 }}>\n          {age > 0 ? `Age: ${age}` : \" \"}\n        </Typography>\n\n        <div className={css.avatarBox}>\n          <img\n            className={clsx(css.avatar, isHover && css.avatarRotate)}\n            src={avatar.link}\n            alt={name}\n          />\n\n          <div className={clsx(css.content, isHover && css.contentRotate)}>\n            <div className={css.data}>\n              {weight && (\n                <div>\n                  weight: <span>{weight}kg</span>\n                </div>\n              )}\n\n              {height && (\n                <div>\n                  height: <span>{height}cm</span>\n                </div>\n              )}\n\n              {marital && (\n                <div>\n                  marital: <span>{marital}</span>\n                </div>\n              )}\n\n              <div>\n                children: <span>{children ? children : \"no children\"}</span>\n              </div>\n\n              {job && (\n                <div>\n                  job: <span>{job}</span>\n                </div>\n              )}\n\n              {country && (\n                <div>\n                  country: <span>{country}</span>\n                </div>\n              )}\n\n              {city && (\n                <div>\n                  city: <span>{city}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </Card>\n    </Link>\n  );\n};\n","import { Fragment, useMemo, useState } from \"react\";\nimport { Pagination } from \"@mui/material\";\n\nimport { useProfiles } from \"containers\";\nimport { FallBack } from \"components/FallBack\";\n\nimport css from \"./style.module.scss\";\nimport { ProfileCard } from \"./Card\";\nimport { DeleteProfileConfirm } from \"components/DeleteProfileConfirm\";\nimport { usePath } from \"hooks\";\n\nconst maxProfilesPerPage = 20;\n\nconst Home = () => {\n  const { page: nav } = usePath();\n  const {\n    profiles,\n    loading,\n    favorites,\n    changeFavorites: addToFavorites,\n  } = useProfiles();\n  const [deleteProfileId, setDeleteProfileId] = useState<\n    number | string | null\n  >(null);\n\n  const [page, setPage] = useState(1);\n\n  const changePage = (p: number) => {\n    setPage(p);\n\n    document.body.scrollTo({\n      behavior: \"smooth\",\n      top: 0,\n    });\n  };\n\n  const pagesAmount = Math.ceil(\n    Object.values(profiles).length / maxProfilesPerPage,\n  );\n\n  const isFavorites = useMemo(\n    () => nav.path.substring(1) === \"favorites\",\n    [nav.path],\n  );\n\n  return (\n    <>\n      <Pagination\n        count={pagesAmount}\n        page={page}\n        onChange={(e, page) => changePage(page)}\n      />\n      <div className={css.root}>\n        {Object.entries(profiles)\n          .filter(([id]) => {\n            if (isFavorites) {\n              return favorites[id];\n            } else {\n              return true;\n            }\n          })\n          .map(([id, { birthday = Infinity, photos, ...etc }], i) => {\n            if (\n              i < (page - 1) * maxProfilesPerPage ||\n              i >= page * maxProfilesPerPage\n            )\n              return null;\n\n            return (\n              <Fragment key={`profile_${id}`}>\n                <ProfileCard\n                  {...{\n                    birthday,\n                    photos,\n                    ...etc,\n                    id,\n                    handleRemove: setDeleteProfileId,\n                    isFavorite: !!favorites[id],\n                    setFavorite: addToFavorites,\n                  }}\n                />\n              </Fragment>\n            );\n          })}\n      </div>\n      <FallBack show={loading} />\n\n      {!loading && pagesAmount > 1 && (\n        <Pagination\n          count={pagesAmount}\n          page={page}\n          onChange={(e, page) => changePage(page)}\n        />\n      )}\n\n      <DeleteProfileConfirm\n        profileId={deleteProfileId}\n        setProfileId={setDeleteProfileId}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","export const getAge = (dateString: number) => {\n  var today = new Date();\n  var birthDate = new Date(dateString);\n  var age = today.getFullYear() - birthDate.getFullYear();\n  var m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n"],"names":["DeleteProfileConfirm","profileId","setProfileId","removeProfile","useProfiles","open","onClose","sx","display","justifyContent","alignItems","background","flexDirection","width","p","borderRadius","mb","mx","onClick","FallBack","show","className","css","Loader","size","ProfileCard","birthday","children","city","country","height","etc","job","marital","name","photos","weight","id","isFavorite","setFavorite","handleRemove","user","useAuth","nav","usePath","page","useState","isHover","setIsHover","age","useMemo","getAge","avatar","createTimeouts","clearTimeouts","pushTimeout","useEffect","handleRotate","to","pathname","onPointerOver","onPointerLeave","onContextMenu","e","preventDefault","stopPropagation","Box","position","left","top","zIndex","gap","Button","color","variant","Close","navigate","Edit","right","transform","opacity","Favorite","FavoriteBorder","Card","Typography","fontSize","textAlign","overflow","textOverflow","textTransform","lineHeight","whiteSpace","my","clsx","src","link","alt","profiles","loading","favorites","addToFavorites","changeFavorites","deleteProfileId","setDeleteProfileId","setPage","changePage","document","body","scrollTo","behavior","pagesAmount","Math","ceil","Object","values","length","isFavorites","path","substring","Pagination","count","onChange","entries","filter","map","i","Infinity","Fragment","dateString","today","Date","birthDate","getFullYear","m","getMonth","getDate"],"sourceRoot":""}