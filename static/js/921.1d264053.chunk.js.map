{"version":3,"file":"static/js/921.1d264053.chunk.js","mappings":"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","sources":["containers/App/components/ErrorComponent/style.module.scss","containers/App/components/ErrorComponent/index.tsx","containers/Layout/routeComponents/Route/index.tsx","containers/Layout/config.ts","containers/Layout/index.tsx","containers/App/index.tsx","containers/Providers/list/Auth/signIn.ts","containers/Providers/list/Auth/signOut.ts","containers/Providers/list/Auth/index.tsx","containers/Providers/list/Profiles/index.tsx","containers/Providers/list/Theme/index.tsx","containers/Providers/index.tsx","hooks/usePath/provider/context.tsx","hooks/usePath/utils/crearStash.ts","hooks/usePath/utils/parseSearchParams.ts","hooks/usePath/provider/index.tsx","hooks/usePath/index.ts","utils/getImgLinkFromFireBase.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { FC } from \"react\";\n\nimport css from \"./style.module.scss\";\n\nexport interface ErrorProps {\n  title: string;\n  message: string;\n  stack?: string;\n  cause?: string;\n}\n\nconst ErrorPage: FC<ErrorProps> = ({ message, title, cause, stack }) => {\n  return (\n    <div className={css.wrapper}>\n      <h1>{title}</h1>\n      <p>Error reason: {message}</p>\n\n      <div className={css.stack}>\n        <span>{cause}</span>\n        <span>{stack}</span>\n      </div>\n\n      <button onClick={() => window.location.reload()} className={css.button}>\n        Reload Page\n      </button>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import { Suspense } from \"react\";\nimport { Routes as Switch, Route, Navigate } from \"react-router-dom\";\n\nimport { createRoute } from \"config\";\nimport { usePath } from \"hooks\";\nimport { useAuth } from \"containers/Providers\";\n\nconst { pages } = createRoute();\n\nexport const Routes = () => {\n  const { page } = usePath();\n  const { user } = useAuth();\n\n  return (\n    <>\n      <Suspense>\n        <Switch location={page.path}>\n          {pages.map(({ pathName, data }, i) => {\n            const { component: Component, redirect, adminOnly } = data;\n\n            const isRedirect = !Component || redirect || (!user && !!adminOnly);\n\n            return (\n              <Route\n                key={`routes/${pathName}_${i}`}\n                path={pathName}\n                element={\n                  !isRedirect ? (\n                    <Component />\n                  ) : (\n                    <Navigate to={redirect || \"/\"} />\n                  )\n                }\n              />\n            );\n          })}\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n","import { useAuth } from \"containers/Providers\";\nimport { usePath } from \"hooks\";\nimport { useMemo, useState } from \"react\";\n\nexport const navigate = [\n  {\n    text: \"All Profiles\",\n    link: \"/\",\n  },\n  {\n    text: \"Favorites\",\n    link: \"/favorites\",\n  },\n];\n\nexport const useAdminPopUp = () => {\n  const { page } = usePath();\n  const { user, sightOut } = useAuth();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClose = () => setIsOpen(false);\n  const handleOpen = () => setIsOpen(true);\n\n  const buttons = useMemo(\n    () => [\n      {\n        text: \"Add Profile\",\n        onClick: () => {\n          page.navigate(\"/create\");\n          handleClose();\n        },\n      },\n      {\n        text: \"Log Out\",\n        onClick: () => {\n          sightOut();\n          handleClose();\n        },\n      },\n    ],\n    [!!user],\n  );\n\n  return {\n    buttons,\n    isOpen,\n    handleClose,\n    handleOpen,\n  };\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport {\n  AppBar,\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Popover,\n  useTheme,\n} from \"@mui/material\";\n\nimport { useAuth } from \"containers/Providers\";\nimport { usePath } from \"hooks\";\n\nimport { Routes } from \"./routeComponents\";\nimport { navigate, useAdminPopUp } from \"./config\";\n\nconst Layout = () => {\n  const { page } = usePath();\n  const { user } = useAuth();\n  const theme = useTheme();\n  const avatar = useRef<HTMLDivElement>(null);\n  const { isOpen, handleClose, handleOpen, buttons } = useAdminPopUp();\n\n  return (\n    <>\n      <Helmet>\n        <title>Date</title>\n      </Helmet>\n\n      <Popover\n        open={isOpen}\n        onClose={handleClose}\n        anchorEl={avatar.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        sx={{\n          mt: 0.5,\n        }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}>\n          {buttons.map(({ onClick, text }) => (\n            <Button\n              sx={{\n                py: 1,\n                px: 2,\n              }}\n              onClick={onClick}>\n              {text}\n            </Button>\n          ))}\n        </Box>\n      </Popover>\n\n      <AppBar position=\"fixed\">\n        <Container maxWidth=\"lg\" sx={{ mx: \"auto\" }}>\n          <Box\n            sx={{\n              flexGrow: 1,\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}>\n            <Box>\n              {navigate.map(({ link, text }) => (\n                <Button\n                  onClick={() => page.navigate(link)}\n                  sx={{\n                    my: 0,\n                    color: \"white\",\n                    height: 50,\n                    borderRadius: 0,\n                    textTransform: \"capitalize\",\n                  }}>\n                  {text}\n                </Button>\n              ))}\n            </Box>\n\n            {user && (\n              <Button onClick={handleOpen}>\n                <Avatar\n                  ref={avatar}\n                  sx={{ width: 35, height: 35, bgcolor: \"#0099ff\" }}>\n                  A\n                </Avatar>\n              </Button>\n            )}\n          </Box>\n        </Container>\n      </AppBar>\n      <Container\n        sx={{\n          py: 2,\n          minHeight: \"100vh\",\n          mt: 5,\n          bgcolor: theme.palette.secondary.main,\n        }}\n        maxWidth=\"lg\">\n        <Routes />\n      </Container>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { Component, ErrorInfo, Suspense } from \"react\";\n\nimport type { ErrorProps } from \"./components/ErrorComponent\";\nimport ErrorPage from \"./components/ErrorComponent\";\nimport Providers from \"containers/Providers\";\nimport Layout from \"containers/Layout\";\n\ninterface State {\n  error?: ErrorProps;\n}\n\nclass App extends Component {\n  state: State = {};\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    console.error(error, info);\n\n    this.setState({\n      error: {\n        title: error.name,\n        message: error.message,\n        stack: error.stack,\n        cause: error.cause,\n      },\n    });\n  }\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <Suspense fallback={null}>\n        {!!error ? (\n          <ErrorPage {...error} />\n        ) : (\n          <Providers>\n            <Layout />\n          </Providers>\n        )}\n      </Suspense>\n    );\n  }\n}\n\nexport default App;\n","import { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \".\";\n\nexport const firebaseSighIn = async (email: string, password: string) => {\n  try {\n    const credential = await signInWithEmailAndPassword(auth, email, password);\n\n    return credential.user;\n  } catch {\n    return null;\n  }\n};\n","import { signOut } from \"firebase/auth\";\nimport { auth } from \".\";\n\nexport const fireBaseSightOut = async () => {\n  await signOut(auth);\n\n  return true;\n};\n","import React, {\n  FC,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { getAuth, Auth, User } from \"firebase/auth\";\n\nimport { firebaseSighIn } from \"./signIn\";\nimport { fireBaseSightOut } from \"./signOut\";\n\nexport const auth = getAuth();\n\nconst AuthContext = createContext<{\n  sighIn: (email: string, password: string) => Promise<User | null>;\n  sightOut: () => void;\n  user: User | null;\n}>({ sighIn: async () => null, sightOut: () => {}, user: null });\n\ninterface Props {\n  children?: React.ReactNode;\n}\nexport const AuthProvider: FC<Props> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(auth.currentUser);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: currentUser,\n        sighIn: firebaseSighIn,\n        sightOut: fireBaseSightOut,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","import React, {\n  ContextType,\n  Dispatch,\n  FC,\n  SetStateAction,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { collection, query, getDocs } from \"firebase/firestore\";\n\nimport { getImgLinkFromFireBase } from \"utils/getImgLinkFromFireBase\";\nimport { FrontProfile, ServerProfile } from \"pages/CreateProfile/type\";\nimport { fireBaseDataBase } from \"config/fireBase\";\nimport { deleteProfileFromServer } from \"utils\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\ntype Profiles = Record<string, FrontProfile>;\n\ninterface ProfilesContext {\n  profiles: Profiles;\n  setProfiles: Dispatch<SetStateAction<Record<string, FrontProfile>>>;\n  removeProfile: (id: string) => Promise<boolean>;\n\n  loading: boolean;\n  favorites: Record<string, string>;\n  /**add if no favorite and remove if is */\n  changeFavorites: (id: string) => void;\n}\n\nconst Context = createContext<ProfilesContext>({\n  profiles: {},\n  setProfiles: () => {},\n  removeProfile: async () => true,\n\n  loading: false,\n  favorites: {},\n  changeFavorites: () => {},\n});\n\ninterface Props {\n  children?: React.ReactNode;\n}\nexport const ProfilesProvider: FC<Props> = ({ children }) => {\n  const [profiles, setProfiles] = useState<Record<string, FrontProfile>>({});\n  const [loading, setLoading] = useState(true);\n  const [isDel, setIsDel] = useState<{\n    isOpen: boolean;\n    severity: \"success\" | \"error\";\n  }>({\n    isOpen: false,\n    severity: \"success\",\n  });\n\n  const [favorites, setFavorites] = useState<ProfilesContext[\"favorites\"]>({});\n\n  const changeFavorites = (id: string) => {\n    setFavorites((old) => {\n      const isFavorite = !!old[id];\n\n      if (isFavorite) delete old[id];\n      else old[id] = id;\n\n      try {\n        const favList = Object.keys(old);\n        localStorage.setItem(\"favorites\", JSON.stringify(favList));\n      } catch (e) {\n        console.error(e);\n      }\n\n      return { ...old };\n    });\n  };\n\n  useEffect(() => {\n    const getProfiles = async () => {\n      setLoading(true);\n      try {\n        const profilesRef = query(collection(fireBaseDataBase, \"profiles\"));\n        const profiles = await getDocs(profilesRef);\n\n        const list = await new Promise<Record<string, FrontProfile>>(\n          (res, rej) => {\n            const list: Record<string, FrontProfile> = {};\n            const size = profiles.size;\n            let i = 0;\n\n            profiles.forEach(async (doc) => {\n              const profile = doc.data() as ServerProfile;\n              const id = doc.id;\n\n              const preparedPhotos: FrontProfile[\"photos\"] = [];\n\n              for (const currentPhoto of profile.photos) {\n                const { isAvatar, name } = currentPhoto;\n                const link = await getImgLinkFromFireBase(currentPhoto.name);\n                preparedPhotos.push({\n                  isAvatar,\n                  link,\n                  name,\n                });\n              }\n\n              list[id] = {\n                ...profile,\n                photos: preparedPhotos,\n              };\n\n              if (++i === size) res(list);\n            });\n\n            if (i === size) res(list);\n          },\n        );\n\n        setProfiles(list);\n\n        try {\n          const favList = localStorage.getItem(\"favorites\");\n          if (favList) {\n            const favListArray = JSON.parse(favList) as string[];\n            setFavorites(\n              favListArray.reduce((fav, id) => {\n                fav[id] = id;\n                return fav;\n              }, {} as ProfilesContext[\"favorites\"]),\n            );\n          }\n        } catch (e) {\n          console.error(\"Something went wrong\", e);\n        }\n      } catch (e) {\n        console.error(\"Something went wrong\", e);\n      }\n      setLoading(false);\n    };\n    getProfiles();\n  }, []);\n\n  const removeProfile = async (id: string) => {\n    const currentProfile = profiles[id];\n\n    setProfiles((old) => {\n      delete old[id];\n      return { ...old };\n    });\n\n    const isSuccess = await deleteProfileFromServer(id, currentProfile);\n    if (isSuccess) {\n      setIsDel({\n        isOpen: true,\n        severity: \"success\",\n      });\n      return true;\n    } else {\n      setIsDel({\n        isOpen: true,\n        severity: \"error\",\n      });\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <Context.Provider\n        value={{\n          profiles,\n          setProfiles,\n          removeProfile,\n          loading,\n          favorites,\n          changeFavorites,\n        }}>\n        {children}\n      </Context.Provider>\n\n      <Snackbar\n        open={isDel.isOpen}\n        onClose={() => setIsDel((old) => ({ ...old, isOpen: false }))}\n        autoHideDuration={2000}>\n        <Alert variant=\"filled\" severity={isDel.severity}>\n          {isDel.severity === \"success\"\n            ? \"Successfully deleted!\"\n            : \"Something went wrong\"}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport const useProfiles = () => useContext(Context);\n","import { createTheme, ThemeProvider as Provider } from \"@mui/material\";\n\nimport React, { FC } from \"react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#593196\",\n    },\n    secondary: {\n      main: \"#ded6ea\",\n    },\n    success: {\n      main: \"#13b955\",\n    },\n    warning: {\n      main: \"#efa31d\",\n    },\n    info: {\n      main: \"#00a1d7\",\n    },\n    error: {\n      main: \"#93000a\",\n    },\n  },\n});\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport const ThemeProvider: FC<Props> = ({ children }) => {\n  return <Provider theme={theme}>{children}</Provider>;\n};\n","import { FC } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { PathProvider } from \"hooks\";\nimport { fireBaseApp } from \"config/fireBase\";\nimport { AuthProvider, ProfilesProvider, ThemeProvider } from \"./list\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nconst isInit = !!fireBaseApp;\n\nconst Providers: FC<Props> = ({ children }) => {\n  if (!isInit) return null;\n  return (\n    <>\n      <ThemeProvider>\n        <BrowserRouter>\n          <PathProvider>\n            <AuthProvider>\n              <ProfilesProvider>\n                <>{children}</>\n              </ProfilesProvider>\n            </AuthProvider>\n          </PathProvider>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default Providers;\nexport * from \"./list\";\n","import React from \"react\";\n\nimport { PathContextType } from \"./type\";\n\nconst defaultValues: PathContextType = {\n  page: {\n    path: \"\",\n    navigate: () => {},\n    isHavePrevHistory: false,\n  },\n  searchParams: {\n    params: {},\n    change: () => {},\n    clear: () => {},\n    delete: () => {},\n  },\n  defaultLocation: {\n    hash: \"\",\n    key: \"\",\n    pathname: \"\",\n    search: \"\",\n    state: {},\n  },\n};\n\nexport const Context = React.createContext<PathContextType>(defaultValues);\n\nexport default Context;\n","\nconst startReg = /^\\/{2,}/g;\nconst endReg = /\\/*$/g;\n\nexport const clearSlash = (path: string) => {\n  const newPath = path.replaceAll(startReg, \"/\");\n  return newPath.replaceAll(endReg, \"\");\n};\n","import { Location } from \"react-router\";\nimport { SearchParamsState } from \"hooks/usePath/type\";\n\nexport const parseSearchParams = (\n  searchParams: SearchParamsState,\n  location: Location,\n) => {\n  const params = new URLSearchParams(location.search);\n  Object.entries(searchParams).forEach(([key, values]) => {\n    if (typeof values === \"string\") params.set(key, values);\n    else values.forEach((value) => params.append(key, value));\n  });\n\n  return params;\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, NavigateOptions, To } from \"react-router\";\nimport { NavigateFunction } from \"react-router-dom\";\n\nimport { SearchParams, SearchParamsState } from \"../type\";\nimport { clearSlash, parseSearchParams } from \"../utils\";\nimport Context from \"./context\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\ninterface PathState {\n  pagePath: string;\n  searchParams: SearchParams;\n}\n\nconst modalSplitter = \"/modal/\";\n\nexport const PathProvider: FC<Props> = ({ children }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const getPath = () => {\n    const { pathname } = location;\n\n    const [pagePath] = pathname.split(modalSplitter) as [\n      string?,\n      string?,\n    ];\n\n    return {\n      pagePath: pagePath || \"/\",\n    };\n  };\n\n  const [state, setState] = useState<PathState>({\n    ...getPath(),\n    searchParams: {},\n  });\n\n  useEffect(() => {\n    setState((old) => ({\n      ...old,\n      ...getPath(),\n    }));\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const entities = searchParams.entries();\n    const returnParams: SearchParams = {};\n\n    for (const [key, value] of entities) {\n      const param = returnParams[key];\n      if (!param) {\n        returnParams[key] = [value];\n      } else {\n        param.push(value);\n      }\n    }\n\n    setState((old) => ({ ...old, searchParams: returnParams }));\n  }, [location.search]);\n\n  const setPath = (to: To, options?: NavigateOptions) => {\n    if (location.pathname !== to) {\n      if (typeof to === \"string\") {\n        navigate(clearSlash(to), options);\n      } else {\n        if (location.key === \"default\") {\n          navigate(\"/\", options);\n        } else {\n          navigate(to, options);\n        }\n      }\n    }\n  };\n\n  /** If you pass a string as the value parameter, the values ​​will be replaced. If you pass an array, the values ​​will be added.\n   * Use once per useEffect*/\n  const changeSearchParams = (searchParams: SearchParamsState) => {\n    navigate({\n      pathname: location.pathname,\n      search: parseSearchParams(searchParams, location).toString(),\n    });\n  };\n  const deleteSearchParams = (key: string) => {\n    const params = new URLSearchParams(location.search);\n    params.delete(key);\n    navigate({\n      pathname: location.pathname,\n      search: params.toString(),\n    });\n  };\n  const clearSearchParams = () => {\n    navigate({\n      pathname: location.pathname,\n      search: \"\",\n    });\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        page: {\n          path: state.pagePath,\n          navigate: setPath as NavigateFunction,\n          isHavePrevHistory: location.key !== \"default\",\n        },\n\n        /** you can make changes once per useEffect or by tracking \"params\" changes*/\n        searchParams: {\n          params: state.searchParams,\n          change: changeSearchParams,\n          delete: deleteSearchParams,\n          clear: clearSearchParams,\n        },\n        defaultLocation: location,\n      }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport * from \"./type\";\n","import { useContext } from \"react\";\nimport Context from \"./provider/context\";\n\nexport const usePath = () => {\n  return useContext(Context);\n};\n\nexport * from \"./provider\";\nexport * from \"./type\";\n","import { fireBaseStorage } from \"config/fireBase\";\nimport { getDownloadURL, ref } from \"firebase/storage\";\n\nexport const getImgLinkFromFireBase = async (link: string) => {\n  try {\n    const linkRef = ref(fireBaseStorage, link);\n    const url = await getDownloadURL(linkRef);\n    return url;\n  } catch (e) {\n    console.log(\"Can't download photo: \", link, e);\n\n    return \"\";\n  }\n};\n"],"names":["message","title","cause","stack","className","css","onClick","window","location","reload","pages","createRoute","Routes","page","usePath","user","useAuth","Suspense","path","map","i","pathName","data","Component","component","redirect","adminOnly","isRedirect","element","to","navigate","text","link","theme","useTheme","avatar","useRef","sightOut","useState","isOpen","setIsOpen","handleClose","buttons","useMemo","handleOpen","useAdminPopUp","Helmet","Popover","open","onClose","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","sx","mt","Box","display","flexDirection","Button","py","px","AppBar","position","Container","maxWidth","mx","flexGrow","justifyContent","alignItems","my","color","height","borderRadius","textTransform","Avatar","ref","width","bgcolor","minHeight","palette","secondary","main","App","state","error","info","console","this","setState","name","fallback","Providers","firebaseSighIn","email","password","signInWithEmailAndPassword","auth","credential","fireBaseSightOut","signOut","getAuth","AuthContext","createContext","sighIn","AuthProvider","children","currentUser","setCurrentUser","useEffect","onAuthStateChanged","Provider","value","useContext","Context","profiles","setProfiles","removeProfile","loading","favorites","changeFavorites","ProfilesProvider","setLoading","severity","isDel","setIsDel","setFavorites","getProfiles","profilesRef","query","collection","fireBaseDataBase","getDocs","Promise","res","rej","list","size","forEach","doc","profile","id","preparedPhotos","photos","currentPhoto","isAvatar","getImgLinkFromFireBase","push","favList","localStorage","getItem","favListArray","JSON","parse","reduce","fav","e","currentProfile","old","deleteProfileFromServer","Object","keys","setItem","stringify","Snackbar","autoHideDuration","Alert","variant","useProfiles","createTheme","primary","success","warning","ThemeProvider","isInit","fireBaseApp","defaultValues","isHavePrevHistory","searchParams","params","change","clear","delete","defaultLocation","hash","key","pathname","search","React","startReg","endReg","parseSearchParams","URLSearchParams","entries","values","set","append","PathProvider","useNavigate","useLocation","getPath","split","pagePath","entities","returnParams","param","options","replaceAll","toString","linkRef","fireBaseStorage","getDownloadURL","url","log"],"sourceRoot":""}