{"version":3,"file":"static/js/323.46f203b3.chunk.js","mappings":"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","sources":["components/Loader/loading.svg","components/Loader/style.module.scss","components/Loader/index.tsx","containers/Providers/list/Auth/signIn.ts","containers/Providers/list/Auth/signOut.ts","containers/Providers/list/Auth/index.tsx","containers/Providers/list/Profiles/index.tsx","containers/Providers/list/Theme/index.tsx","containers/Providers/index.tsx","hooks/usePath/provider/context.tsx","hooks/usePath/utils/crearStash.ts","hooks/usePath/utils/parseSearchParams.ts","hooks/usePath/provider/index.tsx","hooks/usePath/index.ts","utils/getImgLinkFromFireBase.ts"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoading(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"L9\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 100 100\",\n    enableBackground: \"new 0 0 0 0\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    attributeType: \"XML\",\n    type: \"rotate\",\n    dur: \"1s\",\n    from: \"0 50 50\",\n    to: \"360 50 50\",\n    repeatCount: \"indefinite\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoading);\nexport default __webpack_public_path__ + \"static/media/loading.fe9cf5b9e4055f6e0f48c751ca291968.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {};","import React, { FC, SVGProps } from \"react\";\n\nimport { ReactComponent as Loading } from \"./loading.svg\";\n\nimport css from \"./style.module.scss\";\nimport clsx from \"clsx\";\n\ninterface Props extends SVGProps<SVGSVGElement> {\n  size?: string | number;\n}\nexport const Loader: FC<Props> = ({ className, style, size, ...props }) => {\n  return (\n    <Loading\n      {...props}\n      className={clsx(className, css.loader)}\n      style={{\n        ...style,\n        width: size,\n        height: size,\n      }}\n    />\n  );\n};\n","import { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \".\";\n\nexport const firebaseSighIn = async (email: string, password: string) => {\n  try {\n    const credential = await signInWithEmailAndPassword(auth, email, password);\n\n    return credential.user;\n  } catch {\n    return null;\n  }\n};\n","import { signOut } from \"firebase/auth\";\nimport { auth } from \".\";\n\nexport const fireBaseSightOut = async () => {\n  await signOut(auth);\n\n  return true;\n};\n","import React, {\n  FC,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { getAuth, Auth, User } from \"firebase/auth\";\n\nimport { firebaseSighIn } from \"./signIn\";\nimport { fireBaseSightOut } from \"./signOut\";\n\nexport const auth = getAuth();\n\nconst AuthContext = createContext<{\n  sighIn: (email: string, password: string) => Promise<User | null>;\n  sightOut: () => void;\n  user: User | null;\n}>({ sighIn: async () => null, sightOut: () => {}, user: null });\n\ninterface Props {\n  children?: React.ReactNode;\n}\nexport const AuthProvider: FC<Props> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(auth.currentUser);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: currentUser,\n        sighIn: firebaseSighIn,\n        sightOut: fireBaseSightOut,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","import React, {\n  ContextType,\n  Dispatch,\n  FC,\n  SetStateAction,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { collection, query, getDocs } from \"firebase/firestore\";\n\nimport { getImgLinkFromFireBase } from \"utils/getImgLinkFromFireBase\";\nimport { FrontProfile, ServerProfile } from \"pages/CreateProfile/type\";\nimport { fireBaseDataBase } from \"config/fireBase\";\nimport { deleteProfileFromServer } from \"utils\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\ntype Profiles = Record<string, FrontProfile>;\n\ninterface ProfilesContext {\n  profiles: Profiles;\n  setProfiles: Dispatch<SetStateAction<Record<string, FrontProfile>>>;\n  removeProfile: (id: string) => Promise<boolean>;\n\n  loading: boolean;\n  favorites: Record<string, string>;\n  /**add if no favorite and remove if is */\n  changeFavorites: (id: string) => void;\n}\n\nconst Context = createContext<ProfilesContext>({\n  profiles: {},\n  setProfiles: () => {},\n  removeProfile: async () => true,\n\n  loading: false,\n  favorites: {},\n  changeFavorites: () => {},\n});\n\ninterface Props {\n  children?: React.ReactNode;\n}\nexport const ProfilesProvider: FC<Props> = ({ children }) => {\n  const [profiles, setProfiles] = useState<Record<string, FrontProfile>>({});\n  const [loading, setLoading] = useState(true);\n  const [isDel, setIsDel] = useState<{\n    isOpen: boolean;\n    severity: \"success\" | \"error\";\n  }>({\n    isOpen: false,\n    severity: \"success\",\n  });\n\n  const [favorites, setFavorites] = useState<ProfilesContext[\"favorites\"]>({});\n\n  const changeFavorites = (id: string) => {\n    setFavorites((old) => {\n      const isFavorite = !!old[id];\n\n      if (isFavorite) delete old[id];\n      else old[id] = id;\n\n      try {\n        const favList = Object.keys(old);\n        localStorage.setItem(\"favorites\", JSON.stringify(favList));\n      } catch (e) {\n        console.error(e);\n      }\n\n      return { ...old };\n    });\n  };\n\n  useEffect(() => {\n    const getProfiles = async () => {\n      setLoading(true);\n      try {\n        const profilesRef = query(collection(fireBaseDataBase, \"profiles\"));\n        const profiles = await getDocs(profilesRef);\n\n        const list = await new Promise<Record<string, FrontProfile>>(\n          (res, rej) => {\n            const list: Record<string, FrontProfile> = {};\n            const size = profiles.size;\n            let i = 0;\n\n            profiles.forEach(async (doc) => {\n              const profile = doc.data() as ServerProfile;\n              const id = doc.id;\n\n              const preparedPhotos: FrontProfile[\"photos\"] = [];\n\n              for (const currentPhoto of profile.photos) {\n                const { isAvatar, name } = currentPhoto;\n                const link = await getImgLinkFromFireBase(currentPhoto.name);\n                preparedPhotos.push({\n                  isAvatar,\n                  link,\n                  name,\n                });\n              }\n\n              list[id] = {\n                ...profile,\n                photos: preparedPhotos,\n              };\n\n              if (++i === size) res(list);\n            });\n\n            if (i === size) res(list);\n          },\n        );\n\n        setProfiles(list);\n\n        try {\n          const favList = localStorage.getItem(\"favorites\");\n          if (favList) {\n            const favListArray = JSON.parse(favList) as string[];\n            setFavorites(\n              favListArray.reduce((fav, id) => {\n                fav[id] = id;\n                return fav;\n              }, {} as ProfilesContext[\"favorites\"]),\n            );\n          }\n        } catch (e) {\n          console.error(\"Something went wrong\", e);\n        }\n      } catch (e) {\n        console.error(\"Something went wrong\", e);\n      }\n      setLoading(false);\n    };\n    getProfiles();\n  }, []);\n\n  const removeProfile = async (id: string) => {\n    const currentProfile = profiles[id];\n\n    setProfiles((old) => {\n      delete old[id];\n      return { ...old };\n    });\n\n    const isSuccess = await deleteProfileFromServer(id, currentProfile);\n    if (isSuccess) {\n      setIsDel({\n        isOpen: true,\n        severity: \"success\",\n      });\n      return true;\n    } else {\n      setIsDel({\n        isOpen: true,\n        severity: \"error\",\n      });\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <Context.Provider\n        value={{\n          profiles,\n          setProfiles,\n          removeProfile,\n          loading,\n          favorites,\n          changeFavorites,\n        }}>\n        {children}\n      </Context.Provider>\n\n      <Snackbar\n        open={isDel.isOpen}\n        onClose={() => setIsDel((old) => ({ ...old, isOpen: false }))}\n        autoHideDuration={2000}>\n        <Alert variant=\"filled\" severity={isDel.severity}>\n          {isDel.severity === \"success\"\n            ? \"Successfully deleted!\"\n            : \"Something went wrong\"}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport const useProfiles = () => useContext(Context);\n","import { createTheme, ThemeProvider as Provider } from \"@mui/material\";\n\nimport React, { FC } from \"react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#593196\",\n    },\n    secondary: {\n      main: \"#ded6ea\",\n    },\n    success: {\n      main: \"#13b955\",\n    },\n    warning: {\n      main: \"#efa31d\",\n    },\n    info: {\n      main: \"#00a1d7\",\n    },\n    error: {\n      main: \"#93000a\",\n    },\n  },\n});\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport const ThemeProvider: FC<Props> = ({ children }) => {\n  return <Provider theme={theme}>{children}</Provider>;\n};\n","import { FC } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { PathProvider } from \"hooks\";\nimport { fireBaseApp } from \"config/fireBase\";\nimport { AuthProvider, ProfilesProvider, ThemeProvider } from \"./list\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nconst isInit = !!fireBaseApp;\n\nconst Providers: FC<Props> = ({ children }) => {\n  if (!isInit) return null;\n  return (\n    <>\n      <ThemeProvider>\n        <BrowserRouter>\n          <PathProvider>\n            <AuthProvider>\n              <ProfilesProvider>\n                <>{children}</>\n              </ProfilesProvider>\n            </AuthProvider>\n          </PathProvider>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default Providers;\nexport * from \"./list\";\n","import React from \"react\";\n\nimport { PathContextType } from \"./type\";\n\nconst defaultValues: PathContextType = {\n  page: {\n    path: \"\",\n    navigate: () => {},\n    isHavePrevHistory: false,\n  },\n  searchParams: {\n    params: {},\n    change: () => {},\n    clear: () => {},\n    delete: () => {},\n  },\n  defaultLocation: {\n    hash: \"\",\n    key: \"\",\n    pathname: \"\",\n    search: \"\",\n    state: {},\n  },\n};\n\nexport const Context = React.createContext<PathContextType>(defaultValues);\n\nexport default Context;\n","\nconst startReg = /^\\/{2,}/g;\nconst endReg = /\\/*$/g;\n\nexport const clearSlash = (path: string) => {\n  const newPath = path.replaceAll(startReg, \"/\");\n  return newPath.replaceAll(endReg, \"\");\n};\n","import { Location } from \"react-router\";\nimport { SearchParamsState } from \"hooks/usePath/type\";\n\nexport const parseSearchParams = (\n  searchParams: SearchParamsState,\n  location: Location,\n) => {\n  const params = new URLSearchParams(location.search);\n  Object.entries(searchParams).forEach(([key, values]) => {\n    if (typeof values === \"string\") params.set(key, values);\n    else values.forEach((value) => params.append(key, value));\n  });\n\n  return params;\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, NavigateOptions, To } from \"react-router\";\nimport { NavigateFunction } from \"react-router-dom\";\n\nimport { SearchParams, SearchParamsState } from \"../type\";\nimport { clearSlash, parseSearchParams } from \"../utils\";\nimport Context from \"./context\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\ninterface PathState {\n  pagePath: string;\n  searchParams: SearchParams;\n}\n\nconst modalSplitter = \"/modal/\";\n\nexport const PathProvider: FC<Props> = ({ children }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const getPath = () => {\n    const { pathname } = location;\n\n    const [pagePath] = pathname.split(modalSplitter) as [\n      string?,\n      string?,\n    ];\n\n    return {\n      pagePath: pagePath || \"/\",\n    };\n  };\n\n  const [state, setState] = useState<PathState>({\n    ...getPath(),\n    searchParams: {},\n  });\n\n  useEffect(() => {\n    setState((old) => ({\n      ...old,\n      ...getPath(),\n    }));\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const entities = searchParams.entries();\n    const returnParams: SearchParams = {};\n\n    for (const [key, value] of entities) {\n      const param = returnParams[key];\n      if (!param) {\n        returnParams[key] = [value];\n      } else {\n        param.push(value);\n      }\n    }\n\n    setState((old) => ({ ...old, searchParams: returnParams }));\n  }, [location.search]);\n\n  const setPath = (to: To, options?: NavigateOptions) => {\n    if (location.pathname !== to) {\n      if (typeof to === \"string\") {\n        navigate(clearSlash(to), options);\n      } else {\n        if (location.key === \"default\") {\n          navigate(\"/\", options);\n        } else {\n          navigate(to, options);\n        }\n      }\n    }\n  };\n\n  /** If you pass a string as the value parameter, the values ​​will be replaced. If you pass an array, the values ​​will be added.\n   * Use once per useEffect*/\n  const changeSearchParams = (searchParams: SearchParamsState) => {\n    navigate({\n      pathname: location.pathname,\n      search: parseSearchParams(searchParams, location).toString(),\n    });\n  };\n  const deleteSearchParams = (key: string) => {\n    const params = new URLSearchParams(location.search);\n    params.delete(key);\n    navigate({\n      pathname: location.pathname,\n      search: params.toString(),\n    });\n  };\n  const clearSearchParams = () => {\n    navigate({\n      pathname: location.pathname,\n      search: \"\",\n    });\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        page: {\n          path: state.pagePath,\n          navigate: setPath as NavigateFunction,\n          isHavePrevHistory: location.key !== \"default\",\n        },\n\n        /** you can make changes once per useEffect or by tracking \"params\" changes*/\n        searchParams: {\n          params: state.searchParams,\n          change: changeSearchParams,\n          delete: deleteSearchParams,\n          clear: clearSearchParams,\n        },\n        defaultLocation: location,\n      }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport * from \"./type\";\n","import { useContext } from \"react\";\nimport Context from \"./provider/context\";\n\nexport const usePath = () => {\n  return useContext(Context);\n};\n\nexport * from \"./provider\";\nexport * from \"./type\";\n","import { fireBaseStorage } from \"config/fireBase\";\nimport { getDownloadURL, ref } from \"firebase/storage\";\n\nexport const getImgLinkFromFireBase = async (link: string) => {\n  try {\n    const linkRef = ref(fireBaseStorage, link);\n    const url = await getDownloadURL(linkRef);\n    return url;\n  } catch (e) {\n    console.log(\"Can't download photo: \", link, e);\n\n    return \"\";\n  }\n};\n"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoading","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","fill","d","attributeName","attributeType","type","dur","from","to","repeatCount","ForwardRef","Loader","className","style","size","clsx","css","width","height","firebaseSighIn","email","password","signInWithEmailAndPassword","auth","credential","user","fireBaseSightOut","signOut","getAuth","AuthContext","createContext","sighIn","sightOut","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","Provider","value","useAuth","useContext","Context","profiles","setProfiles","removeProfile","loading","favorites","changeFavorites","ProfilesProvider","setLoading","isOpen","severity","isDel","setIsDel","setFavorites","getProfiles","profilesRef","query","collection","fireBaseDataBase","getDocs","Promise","res","rej","list","forEach","doc","profile","data","preparedPhotos","photos","currentPhoto","isAvatar","name","getImgLinkFromFireBase","link","push","favList","localStorage","getItem","favListArray","JSON","parse","reduce","fav","e","console","error","currentProfile","old","deleteProfileFromServer","setItem","stringify","Snackbar","open","onClose","autoHideDuration","Alert","variant","useProfiles","theme","createTheme","palette","primary","main","secondary","success","warning","info","ThemeProvider","isInit","fireBaseApp","defaultValues","page","path","navigate","isHavePrevHistory","searchParams","params","change","clear","delete","defaultLocation","hash","pathname","search","state","React","startReg","endReg","parseSearchParams","location","URLSearchParams","entries","values","set","append","PathProvider","useNavigate","useLocation","getPath","split","pagePath","setState","entities","returnParams","param","options","replaceAll","toString","usePath","linkRef","fireBaseStorage","getDownloadURL","url","log"],"sourceRoot":""}